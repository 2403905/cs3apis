# if starting from scratch in development, run "make init example" to get/build the .gitignored files
protoc:
  includes:
    - ../../grpc-ecosystem/grpc-gateway/third_party/googleapis # go source code inside GOPATH
lint:
  # run "prototool list-linters" to see the currently configured linters
  # add "exclude_ids" to ignore specific linter IDs for all files
  #ignores:
  #  - id: REQUEST_RESPONSE_TYPES_IN_SAME_FILE
  #    files:
  #      - foo/foo.proto
  #  - id: REQUEST_RESPONSE_TYPES_UNIQUE
  #    files:
  #      - foo/foo.proto
generate:
  go_options:
    import_path: github.com/cernbox/cs3apis
    extra_modifiers:
      google/api/annotations.proto: google.golang.org/genproto/googleapis/api/annotations
      google/api/http.proto: google.golang.org/genproto/googleapis/api/annotations
  plugins:
          #- name: csharp
          #output: ./gen/proto/csharp
          #- name: ruby
          #output: ./gen/proto/ruby
          #- name: cpp
          #output: ./gen/proto/cpp
          #- name: php
          #output: ./gen/proto/php
          #- name: python
          #output: ./gen/proto/python
          #- name: java
          #output: ./gen/proto/java
          #- name: javanano
          #output: ./gen/proto/javanano
          #- name : go
          #type: go
          #flags: plugins=grpc
          #output: ./gen/proto/go
          #- name: objc
          #output: ./gen/proto/objc
          #- name: js
          #output: ./gen/proto/js
          #
    - name : go
      type: go
      flags: plugins=grpc
      output: ./gen/proto/go

    - name: grpc-gateway
      type: go
      output: ./gen/proto/go

    - name: swagger
      output: ./gen/swagger
