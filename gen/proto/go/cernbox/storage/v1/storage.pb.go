// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cernbox/storage/v1/storage.proto

package storagev1pb

import (
	context "context"
	fmt "fmt"
	rpc "github.com/cernbox/cernboxapis/gen/proto/go/cernbox/rpc"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateDirectoryRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateDirectoryRequest) Reset()         { *m = CreateDirectoryRequest{} }
func (m *CreateDirectoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateDirectoryRequest) ProtoMessage()    {}
func (*CreateDirectoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{0}
}

func (m *CreateDirectoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDirectoryRequest.Unmarshal(m, b)
}
func (m *CreateDirectoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDirectoryRequest.Marshal(b, m, deterministic)
}
func (m *CreateDirectoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDirectoryRequest.Merge(m, src)
}
func (m *CreateDirectoryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateDirectoryRequest.Size(m)
}
func (m *CreateDirectoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDirectoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDirectoryRequest proto.InternalMessageInfo

func (m *CreateDirectoryRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type CreateDirectoryResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CreateDirectoryResponse) Reset()         { *m = CreateDirectoryResponse{} }
func (m *CreateDirectoryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateDirectoryResponse) ProtoMessage()    {}
func (*CreateDirectoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{1}
}

func (m *CreateDirectoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateDirectoryResponse.Unmarshal(m, b)
}
func (m *CreateDirectoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateDirectoryResponse.Marshal(b, m, deterministic)
}
func (m *CreateDirectoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateDirectoryResponse.Merge(m, src)
}
func (m *CreateDirectoryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateDirectoryResponse.Size(m)
}
func (m *CreateDirectoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateDirectoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateDirectoryResponse proto.InternalMessageInfo

func (m *CreateDirectoryResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{2}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type DeleteResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{3}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type MoveRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveRequest) Reset()         { *m = MoveRequest{} }
func (m *MoveRequest) String() string { return proto.CompactTextString(m) }
func (*MoveRequest) ProtoMessage()    {}
func (*MoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{4}
}

func (m *MoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveRequest.Unmarshal(m, b)
}
func (m *MoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveRequest.Marshal(b, m, deterministic)
}
func (m *MoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveRequest.Merge(m, src)
}
func (m *MoveRequest) XXX_Size() int {
	return xxx_messageInfo_MoveRequest.Size(m)
}
func (m *MoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MoveRequest proto.InternalMessageInfo

func (m *MoveRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type MoveResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MoveResponse) Reset()         { *m = MoveResponse{} }
func (m *MoveResponse) String() string { return proto.CompactTextString(m) }
func (*MoveResponse) ProtoMessage()    {}
func (*MoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{5}
}

func (m *MoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveResponse.Unmarshal(m, b)
}
func (m *MoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveResponse.Marshal(b, m, deterministic)
}
func (m *MoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveResponse.Merge(m, src)
}
func (m *MoveResponse) XXX_Size() int {
	return xxx_messageInfo_MoveResponse.Size(m)
}
func (m *MoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MoveResponse proto.InternalMessageInfo

func (m *MoveResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type StatRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatRequest) Reset()         { *m = StatRequest{} }
func (m *StatRequest) String() string { return proto.CompactTextString(m) }
func (*StatRequest) ProtoMessage()    {}
func (*StatRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{6}
}

func (m *StatRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatRequest.Unmarshal(m, b)
}
func (m *StatRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatRequest.Marshal(b, m, deterministic)
}
func (m *StatRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatRequest.Merge(m, src)
}
func (m *StatRequest) XXX_Size() int {
	return xxx_messageInfo_StatRequest.Size(m)
}
func (m *StatRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatRequest proto.InternalMessageInfo

func (m *StatRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type StatResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Metadata             *Metadata   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StatResponse) Reset()         { *m = StatResponse{} }
func (m *StatResponse) String() string { return proto.CompactTextString(m) }
func (*StatResponse) ProtoMessage()    {}
func (*StatResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{7}
}

func (m *StatResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatResponse.Unmarshal(m, b)
}
func (m *StatResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatResponse.Marshal(b, m, deterministic)
}
func (m *StatResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatResponse.Merge(m, src)
}
func (m *StatResponse) XXX_Size() int {
	return xxx_messageInfo_StatResponse.Size(m)
}
func (m *StatResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatResponse proto.InternalMessageInfo

func (m *StatResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StatResponse) GetMetadata() *Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type ListRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{8}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

func (m *ListRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type ListResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Metadatas            []*Metadata `protobuf:"bytes,2,rep,name=metadatas,proto3" json:"metadatas,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListResponse) Reset()         { *m = ListResponse{} }
func (m *ListResponse) String() string { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()    {}
func (*ListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{9}
}

func (m *ListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListResponse.Unmarshal(m, b)
}
func (m *ListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListResponse.Marshal(b, m, deterministic)
}
func (m *ListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListResponse.Merge(m, src)
}
func (m *ListResponse) XXX_Size() int {
	return xxx_messageInfo_ListResponse.Size(m)
}
func (m *ListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListResponse proto.InternalMessageInfo

func (m *ListResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListResponse) GetMetadatas() []*Metadata {
	if m != nil {
		return m.Metadatas
	}
	return nil
}

type StartWriteSessionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartWriteSessionRequest) Reset()         { *m = StartWriteSessionRequest{} }
func (m *StartWriteSessionRequest) String() string { return proto.CompactTextString(m) }
func (*StartWriteSessionRequest) ProtoMessage()    {}
func (*StartWriteSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{10}
}

func (m *StartWriteSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartWriteSessionRequest.Unmarshal(m, b)
}
func (m *StartWriteSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartWriteSessionRequest.Marshal(b, m, deterministic)
}
func (m *StartWriteSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartWriteSessionRequest.Merge(m, src)
}
func (m *StartWriteSessionRequest) XXX_Size() int {
	return xxx_messageInfo_StartWriteSessionRequest.Size(m)
}
func (m *StartWriteSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartWriteSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartWriteSessionRequest proto.InternalMessageInfo

type StartWriteSessionResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	SessionId            string      `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *StartWriteSessionResponse) Reset()         { *m = StartWriteSessionResponse{} }
func (m *StartWriteSessionResponse) String() string { return proto.CompactTextString(m) }
func (*StartWriteSessionResponse) ProtoMessage()    {}
func (*StartWriteSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{11}
}

func (m *StartWriteSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartWriteSessionResponse.Unmarshal(m, b)
}
func (m *StartWriteSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartWriteSessionResponse.Marshal(b, m, deterministic)
}
func (m *StartWriteSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartWriteSessionResponse.Merge(m, src)
}
func (m *StartWriteSessionResponse) XXX_Size() int {
	return xxx_messageInfo_StartWriteSessionResponse.Size(m)
}
func (m *StartWriteSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartWriteSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartWriteSessionResponse proto.InternalMessageInfo

func (m *StartWriteSessionResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *StartWriteSessionResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

type WriteRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Length               uint64   `protobuf:"varint,2,opt,name=length,proto3" json:"length,omitempty"`
	Offset               uint64   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	Data                 []byte   `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteRequest) Reset()         { *m = WriteRequest{} }
func (m *WriteRequest) String() string { return proto.CompactTextString(m) }
func (*WriteRequest) ProtoMessage()    {}
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{12}
}

func (m *WriteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteRequest.Unmarshal(m, b)
}
func (m *WriteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteRequest.Marshal(b, m, deterministic)
}
func (m *WriteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteRequest.Merge(m, src)
}
func (m *WriteRequest) XXX_Size() int {
	return xxx_messageInfo_WriteRequest.Size(m)
}
func (m *WriteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WriteRequest proto.InternalMessageInfo

func (m *WriteRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *WriteRequest) GetLength() uint64 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *WriteRequest) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *WriteRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WriteResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WriteResponse) Reset()         { *m = WriteResponse{} }
func (m *WriteResponse) String() string { return proto.CompactTextString(m) }
func (*WriteResponse) ProtoMessage()    {}
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{13}
}

func (m *WriteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteResponse.Unmarshal(m, b)
}
func (m *WriteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteResponse.Marshal(b, m, deterministic)
}
func (m *WriteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteResponse.Merge(m, src)
}
func (m *WriteResponse) XXX_Size() int {
	return xxx_messageInfo_WriteResponse.Size(m)
}
func (m *WriteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WriteResponse proto.InternalMessageInfo

func (m *WriteResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type FinishWriteSessionRequest struct {
	SessionId            string   `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Checksum             string   `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FinishWriteSessionRequest) Reset()         { *m = FinishWriteSessionRequest{} }
func (m *FinishWriteSessionRequest) String() string { return proto.CompactTextString(m) }
func (*FinishWriteSessionRequest) ProtoMessage()    {}
func (*FinishWriteSessionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{14}
}

func (m *FinishWriteSessionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinishWriteSessionRequest.Unmarshal(m, b)
}
func (m *FinishWriteSessionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinishWriteSessionRequest.Marshal(b, m, deterministic)
}
func (m *FinishWriteSessionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinishWriteSessionRequest.Merge(m, src)
}
func (m *FinishWriteSessionRequest) XXX_Size() int {
	return xxx_messageInfo_FinishWriteSessionRequest.Size(m)
}
func (m *FinishWriteSessionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FinishWriteSessionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FinishWriteSessionRequest proto.InternalMessageInfo

func (m *FinishWriteSessionRequest) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (m *FinishWriteSessionRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FinishWriteSessionRequest) GetChecksum() string {
	if m != nil {
		return m.Checksum
	}
	return ""
}

type FinishWriteSessionResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *FinishWriteSessionResponse) Reset()         { *m = FinishWriteSessionResponse{} }
func (m *FinishWriteSessionResponse) String() string { return proto.CompactTextString(m) }
func (*FinishWriteSessionResponse) ProtoMessage()    {}
func (*FinishWriteSessionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{15}
}

func (m *FinishWriteSessionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FinishWriteSessionResponse.Unmarshal(m, b)
}
func (m *FinishWriteSessionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FinishWriteSessionResponse.Marshal(b, m, deterministic)
}
func (m *FinishWriteSessionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FinishWriteSessionResponse.Merge(m, src)
}
func (m *FinishWriteSessionResponse) XXX_Size() int {
	return xxx_messageInfo_FinishWriteSessionResponse.Size(m)
}
func (m *FinishWriteSessionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FinishWriteSessionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FinishWriteSessionResponse proto.InternalMessageInfo

func (m *FinishWriteSessionResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ReadRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{16}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type ReadResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DataChunk            *DataChunk  `protobuf:"bytes,2,opt,name=data_chunk,json=dataChunk,proto3" json:"data_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{17}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReadResponse) GetDataChunk() *DataChunk {
	if m != nil {
		return m.DataChunk
	}
	return nil
}

type ListVersionsRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListVersionsRequest) Reset()         { *m = ListVersionsRequest{} }
func (m *ListVersionsRequest) String() string { return proto.CompactTextString(m) }
func (*ListVersionsRequest) ProtoMessage()    {}
func (*ListVersionsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{18}
}

func (m *ListVersionsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVersionsRequest.Unmarshal(m, b)
}
func (m *ListVersionsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVersionsRequest.Marshal(b, m, deterministic)
}
func (m *ListVersionsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVersionsRequest.Merge(m, src)
}
func (m *ListVersionsRequest) XXX_Size() int {
	return xxx_messageInfo_ListVersionsRequest.Size(m)
}
func (m *ListVersionsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVersionsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListVersionsRequest proto.InternalMessageInfo

func (m *ListVersionsRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type ListVersionsResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Version              *Version    `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListVersionsResponse) Reset()         { *m = ListVersionsResponse{} }
func (m *ListVersionsResponse) String() string { return proto.CompactTextString(m) }
func (*ListVersionsResponse) ProtoMessage()    {}
func (*ListVersionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{19}
}

func (m *ListVersionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListVersionsResponse.Unmarshal(m, b)
}
func (m *ListVersionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListVersionsResponse.Marshal(b, m, deterministic)
}
func (m *ListVersionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListVersionsResponse.Merge(m, src)
}
func (m *ListVersionsResponse) XXX_Size() int {
	return xxx_messageInfo_ListVersionsResponse.Size(m)
}
func (m *ListVersionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListVersionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListVersionsResponse proto.InternalMessageInfo

func (m *ListVersionsResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListVersionsResponse) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

type ReadVersionRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	VersionKey           string   `protobuf:"bytes,2,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadVersionRequest) Reset()         { *m = ReadVersionRequest{} }
func (m *ReadVersionRequest) String() string { return proto.CompactTextString(m) }
func (*ReadVersionRequest) ProtoMessage()    {}
func (*ReadVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{20}
}

func (m *ReadVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadVersionRequest.Unmarshal(m, b)
}
func (m *ReadVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadVersionRequest.Marshal(b, m, deterministic)
}
func (m *ReadVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadVersionRequest.Merge(m, src)
}
func (m *ReadVersionRequest) XXX_Size() int {
	return xxx_messageInfo_ReadVersionRequest.Size(m)
}
func (m *ReadVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadVersionRequest proto.InternalMessageInfo

func (m *ReadVersionRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *ReadVersionRequest) GetVersionKey() string {
	if m != nil {
		return m.VersionKey
	}
	return ""
}

type ReadVersionResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	DataChunk            *DataChunk  `protobuf:"bytes,2,opt,name=data_chunk,json=dataChunk,proto3" json:"data_chunk,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReadVersionResponse) Reset()         { *m = ReadVersionResponse{} }
func (m *ReadVersionResponse) String() string { return proto.CompactTextString(m) }
func (*ReadVersionResponse) ProtoMessage()    {}
func (*ReadVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{21}
}

func (m *ReadVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadVersionResponse.Unmarshal(m, b)
}
func (m *ReadVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadVersionResponse.Marshal(b, m, deterministic)
}
func (m *ReadVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadVersionResponse.Merge(m, src)
}
func (m *ReadVersionResponse) XXX_Size() int {
	return xxx_messageInfo_ReadVersionResponse.Size(m)
}
func (m *ReadVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadVersionResponse proto.InternalMessageInfo

func (m *ReadVersionResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ReadVersionResponse) GetDataChunk() *DataChunk {
	if m != nil {
		return m.DataChunk
	}
	return nil
}

type RestoreVersionRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	VersionKey           string   `protobuf:"bytes,2,opt,name=version_key,json=versionKey,proto3" json:"version_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreVersionRequest) Reset()         { *m = RestoreVersionRequest{} }
func (m *RestoreVersionRequest) String() string { return proto.CompactTextString(m) }
func (*RestoreVersionRequest) ProtoMessage()    {}
func (*RestoreVersionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{22}
}

func (m *RestoreVersionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreVersionRequest.Unmarshal(m, b)
}
func (m *RestoreVersionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreVersionRequest.Marshal(b, m, deterministic)
}
func (m *RestoreVersionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreVersionRequest.Merge(m, src)
}
func (m *RestoreVersionRequest) XXX_Size() int {
	return xxx_messageInfo_RestoreVersionRequest.Size(m)
}
func (m *RestoreVersionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreVersionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreVersionRequest proto.InternalMessageInfo

func (m *RestoreVersionRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *RestoreVersionRequest) GetVersionKey() string {
	if m != nil {
		return m.VersionKey
	}
	return ""
}

type RestoreVersionResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RestoreVersionResponse) Reset()         { *m = RestoreVersionResponse{} }
func (m *RestoreVersionResponse) String() string { return proto.CompactTextString(m) }
func (*RestoreVersionResponse) ProtoMessage()    {}
func (*RestoreVersionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{23}
}

func (m *RestoreVersionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreVersionResponse.Unmarshal(m, b)
}
func (m *RestoreVersionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreVersionResponse.Marshal(b, m, deterministic)
}
func (m *RestoreVersionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreVersionResponse.Merge(m, src)
}
func (m *RestoreVersionResponse) XXX_Size() int {
	return xxx_messageInfo_RestoreVersionResponse.Size(m)
}
func (m *RestoreVersionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreVersionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreVersionResponse proto.InternalMessageInfo

func (m *RestoreVersionResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type ListRecycleRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRecycleRequest) Reset()         { *m = ListRecycleRequest{} }
func (m *ListRecycleRequest) String() string { return proto.CompactTextString(m) }
func (*ListRecycleRequest) ProtoMessage()    {}
func (*ListRecycleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{24}
}

func (m *ListRecycleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecycleRequest.Unmarshal(m, b)
}
func (m *ListRecycleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecycleRequest.Marshal(b, m, deterministic)
}
func (m *ListRecycleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecycleRequest.Merge(m, src)
}
func (m *ListRecycleRequest) XXX_Size() int {
	return xxx_messageInfo_ListRecycleRequest.Size(m)
}
func (m *ListRecycleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecycleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecycleRequest proto.InternalMessageInfo

func (m *ListRecycleRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type ListRecycleResponse struct {
	Status               *rpc.Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RecycleItem          *RecycleItem `protobuf:"bytes,2,opt,name=recycle_item,json=recycleItem,proto3" json:"recycle_item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListRecycleResponse) Reset()         { *m = ListRecycleResponse{} }
func (m *ListRecycleResponse) String() string { return proto.CompactTextString(m) }
func (*ListRecycleResponse) ProtoMessage()    {}
func (*ListRecycleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{25}
}

func (m *ListRecycleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRecycleResponse.Unmarshal(m, b)
}
func (m *ListRecycleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRecycleResponse.Marshal(b, m, deterministic)
}
func (m *ListRecycleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRecycleResponse.Merge(m, src)
}
func (m *ListRecycleResponse) XXX_Size() int {
	return xxx_messageInfo_ListRecycleResponse.Size(m)
}
func (m *ListRecycleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRecycleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRecycleResponse proto.InternalMessageInfo

func (m *ListRecycleResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *ListRecycleResponse) GetRecycleItem() *RecycleItem {
	if m != nil {
		return m.RecycleItem
	}
	return nil
}

type RestoreRecycleItemRequest struct {
	RestoreKey           string   `protobuf:"bytes,1,opt,name=restore_key,json=restoreKey,proto3" json:"restore_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestoreRecycleItemRequest) Reset()         { *m = RestoreRecycleItemRequest{} }
func (m *RestoreRecycleItemRequest) String() string { return proto.CompactTextString(m) }
func (*RestoreRecycleItemRequest) ProtoMessage()    {}
func (*RestoreRecycleItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{26}
}

func (m *RestoreRecycleItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreRecycleItemRequest.Unmarshal(m, b)
}
func (m *RestoreRecycleItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreRecycleItemRequest.Marshal(b, m, deterministic)
}
func (m *RestoreRecycleItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreRecycleItemRequest.Merge(m, src)
}
func (m *RestoreRecycleItemRequest) XXX_Size() int {
	return xxx_messageInfo_RestoreRecycleItemRequest.Size(m)
}
func (m *RestoreRecycleItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreRecycleItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreRecycleItemRequest proto.InternalMessageInfo

func (m *RestoreRecycleItemRequest) GetRestoreKey() string {
	if m != nil {
		return m.RestoreKey
	}
	return ""
}

type RestoreRecycleItemResponse struct {
	Status               *rpc.Status  `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	RecycleItem          *RecycleItem `protobuf:"bytes,2,opt,name=recycle_item,json=recycleItem,proto3" json:"recycle_item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RestoreRecycleItemResponse) Reset()         { *m = RestoreRecycleItemResponse{} }
func (m *RestoreRecycleItemResponse) String() string { return proto.CompactTextString(m) }
func (*RestoreRecycleItemResponse) ProtoMessage()    {}
func (*RestoreRecycleItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{27}
}

func (m *RestoreRecycleItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestoreRecycleItemResponse.Unmarshal(m, b)
}
func (m *RestoreRecycleItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestoreRecycleItemResponse.Marshal(b, m, deterministic)
}
func (m *RestoreRecycleItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestoreRecycleItemResponse.Merge(m, src)
}
func (m *RestoreRecycleItemResponse) XXX_Size() int {
	return xxx_messageInfo_RestoreRecycleItemResponse.Size(m)
}
func (m *RestoreRecycleItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestoreRecycleItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestoreRecycleItemResponse proto.InternalMessageInfo

func (m *RestoreRecycleItemResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *RestoreRecycleItemResponse) GetRecycleItem() *RecycleItem {
	if m != nil {
		return m.RecycleItem
	}
	return nil
}

type PurgeRecycleRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PurgeRecycleRequest) Reset()         { *m = PurgeRecycleRequest{} }
func (m *PurgeRecycleRequest) String() string { return proto.CompactTextString(m) }
func (*PurgeRecycleRequest) ProtoMessage()    {}
func (*PurgeRecycleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{28}
}

func (m *PurgeRecycleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgeRecycleRequest.Unmarshal(m, b)
}
func (m *PurgeRecycleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgeRecycleRequest.Marshal(b, m, deterministic)
}
func (m *PurgeRecycleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgeRecycleRequest.Merge(m, src)
}
func (m *PurgeRecycleRequest) XXX_Size() int {
	return xxx_messageInfo_PurgeRecycleRequest.Size(m)
}
func (m *PurgeRecycleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgeRecycleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PurgeRecycleRequest proto.InternalMessageInfo

func (m *PurgeRecycleRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type PurgeRecycleResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PurgeRecycleResponse) Reset()         { *m = PurgeRecycleResponse{} }
func (m *PurgeRecycleResponse) String() string { return proto.CompactTextString(m) }
func (*PurgeRecycleResponse) ProtoMessage()    {}
func (*PurgeRecycleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{29}
}

func (m *PurgeRecycleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PurgeRecycleResponse.Unmarshal(m, b)
}
func (m *PurgeRecycleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PurgeRecycleResponse.Marshal(b, m, deterministic)
}
func (m *PurgeRecycleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PurgeRecycleResponse.Merge(m, src)
}
func (m *PurgeRecycleResponse) XXX_Size() int {
	return xxx_messageInfo_PurgeRecycleResponse.Size(m)
}
func (m *PurgeRecycleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PurgeRecycleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PurgeRecycleResponse proto.InternalMessageInfo

func (m *PurgeRecycleResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type SetACLRequest struct {
	Filename             string     `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Target               *ACLTarget `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	AclMode              ACLMode    `protobuf:"varint,4,opt,name=acl_mode,json=aclMode,proto3,enum=cernbox.storagev1.ACLMode" json:"acl_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SetACLRequest) Reset()         { *m = SetACLRequest{} }
func (m *SetACLRequest) String() string { return proto.CompactTextString(m) }
func (*SetACLRequest) ProtoMessage()    {}
func (*SetACLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{30}
}

func (m *SetACLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetACLRequest.Unmarshal(m, b)
}
func (m *SetACLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetACLRequest.Marshal(b, m, deterministic)
}
func (m *SetACLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetACLRequest.Merge(m, src)
}
func (m *SetACLRequest) XXX_Size() int {
	return xxx_messageInfo_SetACLRequest.Size(m)
}
func (m *SetACLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetACLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetACLRequest proto.InternalMessageInfo

func (m *SetACLRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *SetACLRequest) GetTarget() *ACLTarget {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *SetACLRequest) GetAclMode() ACLMode {
	if m != nil {
		return m.AclMode
	}
	return ACLMode_ACL_MODE_INVALID
}

type SetACLResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SetACLResponse) Reset()         { *m = SetACLResponse{} }
func (m *SetACLResponse) String() string { return proto.CompactTextString(m) }
func (*SetACLResponse) ProtoMessage()    {}
func (*SetACLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{31}
}

func (m *SetACLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetACLResponse.Unmarshal(m, b)
}
func (m *SetACLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetACLResponse.Marshal(b, m, deterministic)
}
func (m *SetACLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetACLResponse.Merge(m, src)
}
func (m *SetACLResponse) XXX_Size() int {
	return xxx_messageInfo_SetACLResponse.Size(m)
}
func (m *SetACLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetACLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetACLResponse proto.InternalMessageInfo

func (m *SetACLResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type UpdateACLRequest struct {
	Filename             string     `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Target               *ACLTarget `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	AclMode              ACLMode    `protobuf:"varint,4,opt,name=acl_mode,json=aclMode,proto3,enum=cernbox.storagev1.ACLMode" json:"acl_mode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateACLRequest) Reset()         { *m = UpdateACLRequest{} }
func (m *UpdateACLRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateACLRequest) ProtoMessage()    {}
func (*UpdateACLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{32}
}

func (m *UpdateACLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateACLRequest.Unmarshal(m, b)
}
func (m *UpdateACLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateACLRequest.Marshal(b, m, deterministic)
}
func (m *UpdateACLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateACLRequest.Merge(m, src)
}
func (m *UpdateACLRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateACLRequest.Size(m)
}
func (m *UpdateACLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateACLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateACLRequest proto.InternalMessageInfo

func (m *UpdateACLRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *UpdateACLRequest) GetTarget() *ACLTarget {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *UpdateACLRequest) GetAclMode() ACLMode {
	if m != nil {
		return m.AclMode
	}
	return ACLMode_ACL_MODE_INVALID
}

type UpdateACLResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UpdateACLResponse) Reset()         { *m = UpdateACLResponse{} }
func (m *UpdateACLResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateACLResponse) ProtoMessage()    {}
func (*UpdateACLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{33}
}

func (m *UpdateACLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateACLResponse.Unmarshal(m, b)
}
func (m *UpdateACLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateACLResponse.Marshal(b, m, deterministic)
}
func (m *UpdateACLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateACLResponse.Merge(m, src)
}
func (m *UpdateACLResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateACLResponse.Size(m)
}
func (m *UpdateACLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateACLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateACLResponse proto.InternalMessageInfo

func (m *UpdateACLResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type UnsetACLRequest struct {
	Filename             string     `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Target               *ACLTarget `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UnsetACLRequest) Reset()         { *m = UnsetACLRequest{} }
func (m *UnsetACLRequest) String() string { return proto.CompactTextString(m) }
func (*UnsetACLRequest) ProtoMessage()    {}
func (*UnsetACLRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{34}
}

func (m *UnsetACLRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsetACLRequest.Unmarshal(m, b)
}
func (m *UnsetACLRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsetACLRequest.Marshal(b, m, deterministic)
}
func (m *UnsetACLRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsetACLRequest.Merge(m, src)
}
func (m *UnsetACLRequest) XXX_Size() int {
	return xxx_messageInfo_UnsetACLRequest.Size(m)
}
func (m *UnsetACLRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsetACLRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnsetACLRequest proto.InternalMessageInfo

func (m *UnsetACLRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *UnsetACLRequest) GetTarget() *ACLTarget {
	if m != nil {
		return m.Target
	}
	return nil
}

type UnsetACLResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UnsetACLResponse) Reset()         { *m = UnsetACLResponse{} }
func (m *UnsetACLResponse) String() string { return proto.CompactTextString(m) }
func (*UnsetACLResponse) ProtoMessage()    {}
func (*UnsetACLResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{35}
}

func (m *UnsetACLResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnsetACLResponse.Unmarshal(m, b)
}
func (m *UnsetACLResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnsetACLResponse.Marshal(b, m, deterministic)
}
func (m *UnsetACLResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnsetACLResponse.Merge(m, src)
}
func (m *UnsetACLResponse) XXX_Size() int {
	return xxx_messageInfo_UnsetACLResponse.Size(m)
}
func (m *UnsetACLResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnsetACLResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnsetACLResponse proto.InternalMessageInfo

func (m *UnsetACLResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type GetQuotaRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQuotaRequest) Reset()         { *m = GetQuotaRequest{} }
func (m *GetQuotaRequest) String() string { return proto.CompactTextString(m) }
func (*GetQuotaRequest) ProtoMessage()    {}
func (*GetQuotaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{36}
}

func (m *GetQuotaRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQuotaRequest.Unmarshal(m, b)
}
func (m *GetQuotaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQuotaRequest.Marshal(b, m, deterministic)
}
func (m *GetQuotaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQuotaRequest.Merge(m, src)
}
func (m *GetQuotaRequest) XXX_Size() int {
	return xxx_messageInfo_GetQuotaRequest.Size(m)
}
func (m *GetQuotaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQuotaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetQuotaRequest proto.InternalMessageInfo

func (m *GetQuotaRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type GetQuotaResponse struct {
	Status               *rpc.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	TotalBytes           uint64      `protobuf:"varint,2,opt,name=total_bytes,json=totalBytes,proto3" json:"total_bytes,omitempty"`
	TotalByts            uint64      `protobuf:"varint,3,opt,name=total_byts,json=totalByts,proto3" json:"total_byts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetQuotaResponse) Reset()         { *m = GetQuotaResponse{} }
func (m *GetQuotaResponse) String() string { return proto.CompactTextString(m) }
func (*GetQuotaResponse) ProtoMessage()    {}
func (*GetQuotaResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_22106b962fc6deaf, []int{37}
}

func (m *GetQuotaResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQuotaResponse.Unmarshal(m, b)
}
func (m *GetQuotaResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQuotaResponse.Marshal(b, m, deterministic)
}
func (m *GetQuotaResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQuotaResponse.Merge(m, src)
}
func (m *GetQuotaResponse) XXX_Size() int {
	return xxx_messageInfo_GetQuotaResponse.Size(m)
}
func (m *GetQuotaResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQuotaResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetQuotaResponse proto.InternalMessageInfo

func (m *GetQuotaResponse) GetStatus() *rpc.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetQuotaResponse) GetTotalBytes() uint64 {
	if m != nil {
		return m.TotalBytes
	}
	return 0
}

func (m *GetQuotaResponse) GetTotalByts() uint64 {
	if m != nil {
		return m.TotalByts
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateDirectoryRequest)(nil), "cernbox.storagev1.CreateDirectoryRequest")
	proto.RegisterType((*CreateDirectoryResponse)(nil), "cernbox.storagev1.CreateDirectoryResponse")
	proto.RegisterType((*DeleteRequest)(nil), "cernbox.storagev1.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "cernbox.storagev1.DeleteResponse")
	proto.RegisterType((*MoveRequest)(nil), "cernbox.storagev1.MoveRequest")
	proto.RegisterType((*MoveResponse)(nil), "cernbox.storagev1.MoveResponse")
	proto.RegisterType((*StatRequest)(nil), "cernbox.storagev1.StatRequest")
	proto.RegisterType((*StatResponse)(nil), "cernbox.storagev1.StatResponse")
	proto.RegisterType((*ListRequest)(nil), "cernbox.storagev1.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "cernbox.storagev1.ListResponse")
	proto.RegisterType((*StartWriteSessionRequest)(nil), "cernbox.storagev1.StartWriteSessionRequest")
	proto.RegisterType((*StartWriteSessionResponse)(nil), "cernbox.storagev1.StartWriteSessionResponse")
	proto.RegisterType((*WriteRequest)(nil), "cernbox.storagev1.WriteRequest")
	proto.RegisterType((*WriteResponse)(nil), "cernbox.storagev1.WriteResponse")
	proto.RegisterType((*FinishWriteSessionRequest)(nil), "cernbox.storagev1.FinishWriteSessionRequest")
	proto.RegisterType((*FinishWriteSessionResponse)(nil), "cernbox.storagev1.FinishWriteSessionResponse")
	proto.RegisterType((*ReadRequest)(nil), "cernbox.storagev1.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "cernbox.storagev1.ReadResponse")
	proto.RegisterType((*ListVersionsRequest)(nil), "cernbox.storagev1.ListVersionsRequest")
	proto.RegisterType((*ListVersionsResponse)(nil), "cernbox.storagev1.ListVersionsResponse")
	proto.RegisterType((*ReadVersionRequest)(nil), "cernbox.storagev1.ReadVersionRequest")
	proto.RegisterType((*ReadVersionResponse)(nil), "cernbox.storagev1.ReadVersionResponse")
	proto.RegisterType((*RestoreVersionRequest)(nil), "cernbox.storagev1.RestoreVersionRequest")
	proto.RegisterType((*RestoreVersionResponse)(nil), "cernbox.storagev1.RestoreVersionResponse")
	proto.RegisterType((*ListRecycleRequest)(nil), "cernbox.storagev1.ListRecycleRequest")
	proto.RegisterType((*ListRecycleResponse)(nil), "cernbox.storagev1.ListRecycleResponse")
	proto.RegisterType((*RestoreRecycleItemRequest)(nil), "cernbox.storagev1.RestoreRecycleItemRequest")
	proto.RegisterType((*RestoreRecycleItemResponse)(nil), "cernbox.storagev1.RestoreRecycleItemResponse")
	proto.RegisterType((*PurgeRecycleRequest)(nil), "cernbox.storagev1.PurgeRecycleRequest")
	proto.RegisterType((*PurgeRecycleResponse)(nil), "cernbox.storagev1.PurgeRecycleResponse")
	proto.RegisterType((*SetACLRequest)(nil), "cernbox.storagev1.SetACLRequest")
	proto.RegisterType((*SetACLResponse)(nil), "cernbox.storagev1.SetACLResponse")
	proto.RegisterType((*UpdateACLRequest)(nil), "cernbox.storagev1.UpdateACLRequest")
	proto.RegisterType((*UpdateACLResponse)(nil), "cernbox.storagev1.UpdateACLResponse")
	proto.RegisterType((*UnsetACLRequest)(nil), "cernbox.storagev1.UnsetACLRequest")
	proto.RegisterType((*UnsetACLResponse)(nil), "cernbox.storagev1.UnsetACLResponse")
	proto.RegisterType((*GetQuotaRequest)(nil), "cernbox.storagev1.GetQuotaRequest")
	proto.RegisterType((*GetQuotaResponse)(nil), "cernbox.storagev1.GetQuotaResponse")
}

func init() { proto.RegisterFile("cernbox/storage/v1/storage.proto", fileDescriptor_22106b962fc6deaf) }

var fileDescriptor_22106b962fc6deaf = []byte{
	// 1199 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0x5d, 0x73, 0xdb, 0x44,
	0x17, 0x1e, 0xbb, 0x7e, 0xdd, 0xf8, 0xd8, 0xf9, 0xda, 0xb4, 0x79, 0x1d, 0x51, 0x88, 0x51, 0x21,
	0x24, 0x84, 0x3a, 0x4d, 0x09, 0xc3, 0x30, 0x2d, 0x03, 0xb1, 0xd3, 0x66, 0x02, 0x09, 0xa4, 0x72,
	0x1b, 0x18, 0x86, 0xa9, 0x67, 0x23, 0x9f, 0x38, 0x9a, 0xd8, 0x5a, 0x67, 0xb5, 0xf6, 0xc4, 0x57,
	0xbd, 0xe2, 0x8e, 0x1f, 0xc0, 0x0c, 0x77, 0x5c, 0xf2, 0x53, 0x98, 0xe1, 0x3f, 0x31, 0x92, 0x56,
	0xb2, 0x65, 0xaf, 0x6d, 0xa1, 0xe1, 0xeb, 0xce, 0x3a, 0xfb, 0x9c, 0xcf, 0x3d, 0xd2, 0x79, 0x8e,
	0xa1, 0x64, 0x22, 0xb7, 0xcf, 0xd9, 0xcd, 0x8e, 0x23, 0x18, 0xa7, 0x4d, 0xdc, 0xe9, 0xed, 0x06,
	0x3f, 0xcb, 0x1d, 0xce, 0x04, 0x23, 0xcb, 0x12, 0x51, 0x96, 0xe2, 0xde, 0xae, 0x56, 0x0c, 0x94,
	0x78, 0xc7, 0xdc, 0x71, 0x04, 0x15, 0x5d, 0xc7, 0x07, 0x6b, 0xba, 0xc2, 0x1c, 0x47, 0x87, 0x75,
	0xb9, 0x89, 0x01, 0xe6, 0x5e, 0x93, 0xb1, 0x66, 0x0b, 0x77, 0x68, 0xc7, 0xda, 0xa1, 0xb6, 0xcd,
	0x04, 0x15, 0x16, 0xb3, 0xe5, 0xa9, 0xbe, 0x07, 0xab, 0x55, 0x8e, 0x54, 0xe0, 0x81, 0xc5, 0xd1,
	0x14, 0x8c, 0xf7, 0x0d, 0xbc, 0xee, 0xa2, 0x23, 0x88, 0x06, 0x73, 0x17, 0x56, 0x0b, 0x6d, 0xda,
	0xc6, 0x62, 0xaa, 0x94, 0xda, 0xcc, 0x19, 0xe1, 0xb3, 0xfe, 0x0c, 0xfe, 0x3f, 0xa6, 0xe5, 0x74,
	0x98, 0xed, 0x20, 0xd9, 0x86, 0xac, 0x1f, 0xa2, 0xa7, 0x94, 0x7f, 0xb4, 0x52, 0x0e, 0x12, 0xe2,
	0x1d, 0xb3, 0x5c, 0xf3, 0x8e, 0x0c, 0x09, 0xd1, 0xb7, 0x61, 0xfe, 0x00, 0x5b, 0x28, 0x30, 0x8e,
	0xd3, 0x4f, 0x61, 0x21, 0x00, 0x27, 0xf1, 0xb5, 0x05, 0xf9, 0x13, 0xd6, 0x8b, 0xe5, 0xe9, 0x31,
	0x14, 0x7c, 0x68, 0x42, 0x3f, 0xae, 0x24, 0x8e, 0x1f, 0x01, 0x05, 0x1f, 0x9a, 0xc0, 0x0f, 0xf9,
	0x18, 0xe6, 0xda, 0x28, 0x68, 0x83, 0x0a, 0x5a, 0x4c, 0x7b, 0xf0, 0x37, 0xca, 0x63, 0xbd, 0x53,
	0x3e, 0x91, 0x10, 0x23, 0x04, 0xbb, 0x01, 0x1e, 0x5b, 0x4e, 0xac, 0x00, 0x7b, 0x50, 0xf0, 0xa1,
	0x49, 0x02, 0xfc, 0x04, 0x72, 0x81, 0x4f, 0xa7, 0x98, 0x2e, 0xdd, 0x9a, 0x15, 0xe1, 0x00, 0xad,
	0x6b, 0x50, 0xac, 0x09, 0xca, 0xc5, 0x37, 0xdc, 0x12, 0x58, 0x43, 0xc7, 0xb1, 0x98, 0x2d, 0xe3,
	0xd5, 0x9b, 0xb0, 0xa6, 0x38, 0x4b, 0x12, 0xe0, 0x9b, 0x00, 0x8e, 0xaf, 0x5f, 0xb7, 0x1a, 0x5e,
	0x0d, 0x73, 0x46, 0x4e, 0x4a, 0x8e, 0x1a, 0xfa, 0x35, 0x14, 0x3c, 0x1f, 0x41, 0xa1, 0xa2, 0xf0,
	0xd4, 0x08, 0x9c, 0xac, 0x42, 0xb6, 0x85, 0x76, 0x53, 0x5c, 0x7a, 0x96, 0x32, 0x86, 0x7c, 0x72,
	0xe5, 0xec, 0xe2, 0xc2, 0x41, 0x51, 0xbc, 0xe5, 0xcb, 0xfd, 0x27, 0x42, 0x20, 0xe3, 0xdd, 0x5d,
	0xa6, 0x94, 0xda, 0x2c, 0x18, 0xde, 0x6f, 0xfd, 0x09, 0xcc, 0x4b, 0x97, 0x49, 0x3a, 0x8f, 0xc3,
	0xda, 0x33, 0xcb, 0xb6, 0x9c, 0x4b, 0x45, 0xd9, 0x66, 0x45, 0x3f, 0xdc, 0x05, 0xe9, 0x68, 0x17,
	0xb8, 0x67, 0xe6, 0x25, 0x9a, 0x57, 0x4e, 0xb7, 0xed, 0xe5, 0x90, 0x33, 0xc2, 0x67, 0xfd, 0x08,
	0x34, 0x95, 0xcf, 0x84, 0x2f, 0x8e, 0x81, 0xb4, 0x11, 0xa7, 0x2f, 0x6f, 0xa0, 0xe0, 0x43, 0x93,
	0x5c, 0xfb, 0x63, 0x00, 0xb7, 0xd8, 0x75, 0xf3, 0xb2, 0x6b, 0x5f, 0xc9, 0x57, 0xe7, 0x9e, 0xa2,
	0x31, 0x0f, 0xa8, 0xa0, 0x55, 0x17, 0x63, 0xe4, 0x1a, 0xc1, 0x4f, 0x7d, 0x17, 0x56, 0xdc, 0x37,
	0xe2, 0x0c, 0xb9, 0x9b, 0xa8, 0x13, 0x27, 0xd8, 0x3e, 0xdc, 0x89, 0xaa, 0x24, 0x09, 0x7a, 0x0f,
	0x6e, 0xf7, 0x7c, 0x03, 0x32, 0x62, 0x4d, 0x11, 0xb1, 0x74, 0x61, 0x04, 0x50, 0xfd, 0x39, 0x10,
	0xb7, 0x4e, 0x81, 0x7c, 0x76, 0xb0, 0x64, 0x1d, 0xf2, 0x52, 0xb9, 0x7e, 0x85, 0x7d, 0xd9, 0x0a,
	0x20, 0x45, 0x5f, 0x62, 0x5f, 0x7f, 0x0d, 0x2b, 0x11, 0x93, 0xff, 0xf8, 0x0d, 0xbc, 0x80, 0xbb,
	0x06, 0xba, 0x18, 0xfc, 0x2b, 0xd3, 0x7a, 0x0a, 0xab, 0xa3, 0x56, 0x93, 0xf4, 0xf0, 0x43, 0x20,
	0xfe, 0x07, 0xd3, 0xec, 0x9b, 0xad, 0x58, 0xb3, 0xe6, 0x87, 0x94, 0xdf, 0x51, 0xa1, 0x4a, 0x92,
	0x82, 0xee, 0x43, 0x81, 0xfb, 0xfa, 0x75, 0x4b, 0x60, 0x5b, 0x96, 0xf4, 0x2d, 0x45, 0x49, 0xa5,
	0x9b, 0x23, 0x81, 0x6d, 0x23, 0xcf, 0x07, 0x0f, 0xfa, 0x13, 0x58, 0x93, 0x05, 0x18, 0x86, 0xc8,
	0x04, 0xd6, 0x21, 0xcf, 0xfd, 0x43, 0xaf, 0x7c, 0x7e, 0x0e, 0x20, 0x45, 0x6e, 0xf9, 0x7e, 0x4c,
	0x81, 0xa6, 0x52, 0xff, 0x97, 0x92, 0xd9, 0x85, 0x95, 0xd3, 0x2e, 0x6f, 0xe2, 0x9f, 0xb8, 0x87,
	0x2a, 0xdc, 0x89, 0xaa, 0x24, 0xb9, 0xfe, 0x9f, 0x52, 0x30, 0x5f, 0x43, 0xb1, 0x5f, 0x3d, 0x8e,
	0xd3, 0x94, 0x7b, 0x90, 0x15, 0x94, 0x37, 0x51, 0x4c, 0x79, 0x05, 0xf6, 0xab, 0xc7, 0x2f, 0x3c,
	0x8c, 0x21, 0xb1, 0xe4, 0x23, 0x98, 0xa3, 0x66, 0xab, 0xde, 0x66, 0x0d, 0xf4, 0x66, 0xc7, 0x82,
	0xf2, 0x53, 0xb0, 0x5f, 0x3d, 0x3e, 0x61, 0x0d, 0x34, 0x6e, 0x53, 0xb3, 0xe5, 0xfe, 0x70, 0xd9,
	0x53, 0x10, 0x59, 0x92, 0xcc, 0x7e, 0x4e, 0xc1, 0xd2, 0xcb, 0x4e, 0x83, 0x0a, 0xfc, 0x2f, 0x26,
	0xf7, 0x39, 0x2c, 0x0f, 0x05, 0x97, 0x24, 0x3f, 0x13, 0x16, 0x5f, 0xda, 0xce, 0xdf, 0x7b, 0x75,
	0xfa, 0x67, 0xb0, 0x34, 0x70, 0x92, 0x24, 0xca, 0x07, 0xb0, 0x78, 0x88, 0xe2, 0x79, 0x97, 0x09,
	0x1a, 0xa7, 0xa7, 0x5f, 0xc3, 0xd2, 0x00, 0x9e, 0xe4, 0x55, 0x5c, 0x87, 0xbc, 0x60, 0x82, 0xb6,
	0xea, 0xe7, 0x7d, 0x81, 0x8e, 0x24, 0x36, 0xe0, 0x89, 0x2a, 0xae, 0xc4, 0x65, 0x15, 0x21, 0xc0,
	0x91, 0x04, 0x27, 0x17, 0x9c, 0x3b, 0x8f, 0x7e, 0x9f, 0x87, 0x85, 0x9a, 0x5f, 0x90, 0x1a, 0xf2,
	0x9e, 0x65, 0x22, 0xb9, 0x84, 0xc5, 0x91, 0xd5, 0x81, 0x6c, 0x29, 0x8a, 0xa7, 0x5e, 0x4a, 0xb4,
	0xf7, 0xe3, 0x40, 0x65, 0xa6, 0x27, 0x90, 0xf5, 0xf7, 0x05, 0x52, 0x52, 0xcd, 0x96, 0xe1, 0xbd,
	0x43, 0x7b, 0x7b, 0x0a, 0x42, 0x9a, 0x3b, 0x84, 0x8c, 0xbb, 0x14, 0x10, 0xd5, 0x87, 0x68, 0x68,
	0xb1, 0xd0, 0xd6, 0x27, 0x9e, 0x0f, 0x0c, 0xb9, 0x65, 0x56, 0x1a, 0x1a, 0xda, 0x1c, 0x94, 0x86,
	0x22, 0xeb, 0xc2, 0x21, 0x64, 0xdc, 0xc9, 0xa1, 0x34, 0x34, 0xc4, 0xf0, 0x95, 0x86, 0x22, 0xb4,
	0xde, 0x86, 0xe5, 0x31, 0x4a, 0x4d, 0xb6, 0xd5, 0xee, 0x95, 0xa4, 0x5c, 0xfb, 0x20, 0x1e, 0x58,
	0xfa, 0xfb, 0x02, 0xfe, 0xe7, 0xc9, 0x89, 0x2a, 0xb2, 0x61, 0xce, 0xad, 0x95, 0x26, 0x03, 0xa4,
	0xad, 0x6b, 0x20, 0xe3, 0x04, 0x94, 0xa8, 0xe2, 0x99, 0xc8, 0x8d, 0xb5, 0x07, 0x31, 0xd1, 0xd2,
	0xe5, 0x11, 0x64, 0x5c, 0x0a, 0x44, 0xd4, 0x23, 0x29, 0x64, 0xb0, 0xca, 0xba, 0x0f, 0xd3, 0xd6,
	0x87, 0x29, 0x42, 0xfd, 0x05, 0x2b, 0xe0, 0x86, 0x64, 0x63, 0xc2, 0x55, 0x8d, 0xf0, 0x4d, 0xed,
	0xbd, 0x99, 0xb8, 0xd0, 0xc5, 0x2b, 0x9f, 0x56, 0xcb, 0x13, 0xf2, 0xee, 0x84, 0xa0, 0xa2, 0x64,
	0x4a, 0xdb, 0x98, 0x05, 0x0b, 0xed, 0x23, 0x2c, 0x44, 0x99, 0x13, 0xd9, 0x54, 0xea, 0x2a, 0x28,
	0x9b, 0xb6, 0x15, 0x03, 0x29, 0x8b, 0xfe, 0x2a, 0xd8, 0x5a, 0xbd, 0xf1, 0xac, 0x4c, 0x63, 0x9c,
	0x79, 0x69, 0x1b, 0xb3, 0x60, 0x61, 0x1a, 0xd7, 0x2e, 0x55, 0x1e, 0x25, 0x30, 0xca, 0x3e, 0x9a,
	0x48, 0x93, 0x94, 0x7d, 0x34, 0x85, 0x15, 0xd5, 0xa1, 0x30, 0x4c, 0x39, 0x94, 0x97, 0xaf, 0xa0,
	0x31, 0xca, 0xcb, 0x57, 0x72, 0x97, 0x13, 0xc8, 0xfa, 0x33, 0x5f, 0xf9, 0x05, 0x8c, 0x10, 0x15,
	0xe5, 0x17, 0x70, 0x84, 0x30, 0x9c, 0x41, 0x2e, 0x9c, 0xb2, 0xe4, 0xbe, 0x02, 0x3f, 0x4a, 0x10,
	0xb4, 0x77, 0xa6, 0x83, 0xa4, 0xdd, 0x1a, 0xcc, 0x05, 0x63, 0x91, 0xe8, 0x2a, 0x8d, 0xe8, 0x60,
	0xd6, 0xee, 0x4f, 0xc5, 0x0c, 0x8c, 0x06, 0xb3, 0x4f, 0x69, 0x74, 0x64, 0x8e, 0x2a, 0x8d, 0x8e,
	0x0e, 0xcf, 0x0a, 0xc2, 0x5d, 0x93, 0xb5, 0xc7, 0x91, 0x95, 0x82, 0x9c, 0x72, 0xa7, 0x9c, 0x09,
	0x76, 0x9a, 0xfa, 0x2e, 0x1f, 0x1e, 0x75, 0xce, 0x7f, 0x49, 0x67, 0xab, 0x95, 0xaf, 0xbf, 0xdd,
	0xaf, 0xfc, 0x9a, 0x5e, 0xae, 0x3e, 0x35, 0xbe, 0xaa, 0xb0, 0x9b, 0xb2, 0x84, 0x9f, 0xed, 0xfe,
	0x96, 0x5e, 0xae, 0x22, 0xb7, 0x2b, 0xec, 0xe6, 0xfb, 0x50, 0x76, 0x9e, 0xf5, 0xfe, 0x9b, 0xfb,
	0xf0, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x62, 0x97, 0x0e, 0xee, 0x2e, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageServiceClient is the client API for StorageService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageServiceClient interface {
	CreateDirectory(ctx context.Context, in *CreateDirectoryRequest, opts ...grpc.CallOption) (*CreateDirectoryResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
	Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveResponse, error)
	Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	StartWriteSession(ctx context.Context, in *StartWriteSessionRequest, opts ...grpc.CallOption) (*StartWriteSessionResponse, error)
	Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error)
	FinishWriteSession(ctx context.Context, in *FinishWriteSessionRequest, opts ...grpc.CallOption) (*FinishWriteSessionResponse, error)
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (StorageService_ReadClient, error)
	ListVersions(ctx context.Context, in *ListVersionsRequest, opts ...grpc.CallOption) (StorageService_ListVersionsClient, error)
	ReadVersion(ctx context.Context, in *ReadVersionRequest, opts ...grpc.CallOption) (StorageService_ReadVersionClient, error)
	RestoreVersion(ctx context.Context, in *RestoreVersionRequest, opts ...grpc.CallOption) (*RestoreVersionResponse, error)
	ListRecycle(ctx context.Context, in *ListRecycleRequest, opts ...grpc.CallOption) (StorageService_ListRecycleClient, error)
	RestoreRecycleItem(ctx context.Context, in *RestoreRecycleItemRequest, opts ...grpc.CallOption) (*RestoreRecycleItemResponse, error)
	PurgeRecycle(ctx context.Context, in *PurgeRecycleRequest, opts ...grpc.CallOption) (*PurgeRecycleResponse, error)
	SetACL(ctx context.Context, in *SetACLRequest, opts ...grpc.CallOption) (*SetACLResponse, error)
	UpdateACL(ctx context.Context, in *UpdateACLRequest, opts ...grpc.CallOption) (*UpdateACLResponse, error)
	UnsetACL(ctx context.Context, in *UnsetACLRequest, opts ...grpc.CallOption) (*UnsetACLResponse, error)
	GetQuota(ctx context.Context, in *GetQuotaRequest, opts ...grpc.CallOption) (*GetQuotaResponse, error)
}

type storageServiceClient struct {
	cc *grpc.ClientConn
}

func NewStorageServiceClient(cc *grpc.ClientConn) StorageServiceClient {
	return &storageServiceClient{cc}
}

func (c *storageServiceClient) CreateDirectory(ctx context.Context, in *CreateDirectoryRequest, opts ...grpc.CallOption) (*CreateDirectoryResponse, error) {
	out := new(CreateDirectoryResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/CreateDirectory", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) Move(ctx context.Context, in *MoveRequest, opts ...grpc.CallOption) (*MoveResponse, error) {
	out := new(MoveResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/Move", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) Stat(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (*StatResponse, error) {
	out := new(StatResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/Stat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) StartWriteSession(ctx context.Context, in *StartWriteSessionRequest, opts ...grpc.CallOption) (*StartWriteSessionResponse, error) {
	out := new(StartWriteSessionResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/StartWriteSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) Write(ctx context.Context, in *WriteRequest, opts ...grpc.CallOption) (*WriteResponse, error) {
	out := new(WriteResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/Write", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) FinishWriteSession(ctx context.Context, in *FinishWriteSessionRequest, opts ...grpc.CallOption) (*FinishWriteSessionResponse, error) {
	out := new(FinishWriteSessionResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/FinishWriteSession", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (StorageService_ReadClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StorageService_serviceDesc.Streams[0], "/cernbox.storagev1.StorageService/Read", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageServiceReadClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StorageService_ReadClient interface {
	Recv() (*ReadResponse, error)
	grpc.ClientStream
}

type storageServiceReadClient struct {
	grpc.ClientStream
}

func (x *storageServiceReadClient) Recv() (*ReadResponse, error) {
	m := new(ReadResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *storageServiceClient) ListVersions(ctx context.Context, in *ListVersionsRequest, opts ...grpc.CallOption) (StorageService_ListVersionsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StorageService_serviceDesc.Streams[1], "/cernbox.storagev1.StorageService/ListVersions", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageServiceListVersionsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StorageService_ListVersionsClient interface {
	Recv() (*ListVersionsResponse, error)
	grpc.ClientStream
}

type storageServiceListVersionsClient struct {
	grpc.ClientStream
}

func (x *storageServiceListVersionsClient) Recv() (*ListVersionsResponse, error) {
	m := new(ListVersionsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *storageServiceClient) ReadVersion(ctx context.Context, in *ReadVersionRequest, opts ...grpc.CallOption) (StorageService_ReadVersionClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StorageService_serviceDesc.Streams[2], "/cernbox.storagev1.StorageService/ReadVersion", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageServiceReadVersionClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StorageService_ReadVersionClient interface {
	Recv() (*ReadVersionResponse, error)
	grpc.ClientStream
}

type storageServiceReadVersionClient struct {
	grpc.ClientStream
}

func (x *storageServiceReadVersionClient) Recv() (*ReadVersionResponse, error) {
	m := new(ReadVersionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *storageServiceClient) RestoreVersion(ctx context.Context, in *RestoreVersionRequest, opts ...grpc.CallOption) (*RestoreVersionResponse, error) {
	out := new(RestoreVersionResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/RestoreVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) ListRecycle(ctx context.Context, in *ListRecycleRequest, opts ...grpc.CallOption) (StorageService_ListRecycleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_StorageService_serviceDesc.Streams[3], "/cernbox.storagev1.StorageService/ListRecycle", opts...)
	if err != nil {
		return nil, err
	}
	x := &storageServiceListRecycleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type StorageService_ListRecycleClient interface {
	Recv() (*ListRecycleResponse, error)
	grpc.ClientStream
}

type storageServiceListRecycleClient struct {
	grpc.ClientStream
}

func (x *storageServiceListRecycleClient) Recv() (*ListRecycleResponse, error) {
	m := new(ListRecycleResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *storageServiceClient) RestoreRecycleItem(ctx context.Context, in *RestoreRecycleItemRequest, opts ...grpc.CallOption) (*RestoreRecycleItemResponse, error) {
	out := new(RestoreRecycleItemResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/RestoreRecycleItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) PurgeRecycle(ctx context.Context, in *PurgeRecycleRequest, opts ...grpc.CallOption) (*PurgeRecycleResponse, error) {
	out := new(PurgeRecycleResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/PurgeRecycle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) SetACL(ctx context.Context, in *SetACLRequest, opts ...grpc.CallOption) (*SetACLResponse, error) {
	out := new(SetACLResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/SetACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) UpdateACL(ctx context.Context, in *UpdateACLRequest, opts ...grpc.CallOption) (*UpdateACLResponse, error) {
	out := new(UpdateACLResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/UpdateACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) UnsetACL(ctx context.Context, in *UnsetACLRequest, opts ...grpc.CallOption) (*UnsetACLResponse, error) {
	out := new(UnsetACLResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/UnsetACL", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageServiceClient) GetQuota(ctx context.Context, in *GetQuotaRequest, opts ...grpc.CallOption) (*GetQuotaResponse, error) {
	out := new(GetQuotaResponse)
	err := c.cc.Invoke(ctx, "/cernbox.storagev1.StorageService/GetQuota", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServiceServer is the server API for StorageService service.
type StorageServiceServer interface {
	CreateDirectory(context.Context, *CreateDirectoryRequest) (*CreateDirectoryResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
	Move(context.Context, *MoveRequest) (*MoveResponse, error)
	Stat(context.Context, *StatRequest) (*StatResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	StartWriteSession(context.Context, *StartWriteSessionRequest) (*StartWriteSessionResponse, error)
	Write(context.Context, *WriteRequest) (*WriteResponse, error)
	FinishWriteSession(context.Context, *FinishWriteSessionRequest) (*FinishWriteSessionResponse, error)
	Read(*ReadRequest, StorageService_ReadServer) error
	ListVersions(*ListVersionsRequest, StorageService_ListVersionsServer) error
	ReadVersion(*ReadVersionRequest, StorageService_ReadVersionServer) error
	RestoreVersion(context.Context, *RestoreVersionRequest) (*RestoreVersionResponse, error)
	ListRecycle(*ListRecycleRequest, StorageService_ListRecycleServer) error
	RestoreRecycleItem(context.Context, *RestoreRecycleItemRequest) (*RestoreRecycleItemResponse, error)
	PurgeRecycle(context.Context, *PurgeRecycleRequest) (*PurgeRecycleResponse, error)
	SetACL(context.Context, *SetACLRequest) (*SetACLResponse, error)
	UpdateACL(context.Context, *UpdateACLRequest) (*UpdateACLResponse, error)
	UnsetACL(context.Context, *UnsetACLRequest) (*UnsetACLResponse, error)
	GetQuota(context.Context, *GetQuotaRequest) (*GetQuotaResponse, error)
}

func RegisterStorageServiceServer(s *grpc.Server, srv StorageServiceServer) {
	s.RegisterService(&_StorageService_serviceDesc, srv)
}

func _StorageService_CreateDirectory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDirectoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).CreateDirectory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/CreateDirectory",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).CreateDirectory(ctx, req.(*CreateDirectoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_Move_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).Move(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/Move",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).Move(ctx, req.(*MoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_Stat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).Stat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/Stat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).Stat(ctx, req.(*StatRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_StartWriteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartWriteSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).StartWriteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/StartWriteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).StartWriteSession(ctx, req.(*StartWriteSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_Write_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).Write(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/Write",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).Write(ctx, req.(*WriteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_FinishWriteSession_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinishWriteSessionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).FinishWriteSession(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/FinishWriteSession",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).FinishWriteSession(ctx, req.(*FinishWriteSessionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_Read_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StorageServiceServer).Read(m, &storageServiceReadServer{stream})
}

type StorageService_ReadServer interface {
	Send(*ReadResponse) error
	grpc.ServerStream
}

type storageServiceReadServer struct {
	grpc.ServerStream
}

func (x *storageServiceReadServer) Send(m *ReadResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _StorageService_ListVersions_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListVersionsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StorageServiceServer).ListVersions(m, &storageServiceListVersionsServer{stream})
}

type StorageService_ListVersionsServer interface {
	Send(*ListVersionsResponse) error
	grpc.ServerStream
}

type storageServiceListVersionsServer struct {
	grpc.ServerStream
}

func (x *storageServiceListVersionsServer) Send(m *ListVersionsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _StorageService_ReadVersion_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadVersionRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StorageServiceServer).ReadVersion(m, &storageServiceReadVersionServer{stream})
}

type StorageService_ReadVersionServer interface {
	Send(*ReadVersionResponse) error
	grpc.ServerStream
}

type storageServiceReadVersionServer struct {
	grpc.ServerStream
}

func (x *storageServiceReadVersionServer) Send(m *ReadVersionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _StorageService_RestoreVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreVersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).RestoreVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/RestoreVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).RestoreVersion(ctx, req.(*RestoreVersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_ListRecycle_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListRecycleRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(StorageServiceServer).ListRecycle(m, &storageServiceListRecycleServer{stream})
}

type StorageService_ListRecycleServer interface {
	Send(*ListRecycleResponse) error
	grpc.ServerStream
}

type storageServiceListRecycleServer struct {
	grpc.ServerStream
}

func (x *storageServiceListRecycleServer) Send(m *ListRecycleResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _StorageService_RestoreRecycleItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestoreRecycleItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).RestoreRecycleItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/RestoreRecycleItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).RestoreRecycleItem(ctx, req.(*RestoreRecycleItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_PurgeRecycle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PurgeRecycleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).PurgeRecycle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/PurgeRecycle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).PurgeRecycle(ctx, req.(*PurgeRecycleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_SetACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetACLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).SetACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/SetACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).SetACL(ctx, req.(*SetACLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_UpdateACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateACLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).UpdateACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/UpdateACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).UpdateACL(ctx, req.(*UpdateACLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_UnsetACL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnsetACLRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).UnsetACL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/UnsetACL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).UnsetACL(ctx, req.(*UnsetACLRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _StorageService_GetQuota_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQuotaRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServiceServer).GetQuota(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cernbox.storagev1.StorageService/GetQuota",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServiceServer).GetQuota(ctx, req.(*GetQuotaRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _StorageService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cernbox.storagev1.StorageService",
	HandlerType: (*StorageServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateDirectory",
			Handler:    _StorageService_CreateDirectory_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _StorageService_Delete_Handler,
		},
		{
			MethodName: "Move",
			Handler:    _StorageService_Move_Handler,
		},
		{
			MethodName: "Stat",
			Handler:    _StorageService_Stat_Handler,
		},
		{
			MethodName: "List",
			Handler:    _StorageService_List_Handler,
		},
		{
			MethodName: "StartWriteSession",
			Handler:    _StorageService_StartWriteSession_Handler,
		},
		{
			MethodName: "Write",
			Handler:    _StorageService_Write_Handler,
		},
		{
			MethodName: "FinishWriteSession",
			Handler:    _StorageService_FinishWriteSession_Handler,
		},
		{
			MethodName: "RestoreVersion",
			Handler:    _StorageService_RestoreVersion_Handler,
		},
		{
			MethodName: "RestoreRecycleItem",
			Handler:    _StorageService_RestoreRecycleItem_Handler,
		},
		{
			MethodName: "PurgeRecycle",
			Handler:    _StorageService_PurgeRecycle_Handler,
		},
		{
			MethodName: "SetACL",
			Handler:    _StorageService_SetACL_Handler,
		},
		{
			MethodName: "UpdateACL",
			Handler:    _StorageService_UpdateACL_Handler,
		},
		{
			MethodName: "UnsetACL",
			Handler:    _StorageService_UnsetACL_Handler,
		},
		{
			MethodName: "GetQuota",
			Handler:    _StorageService_GetQuota_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Read",
			Handler:       _StorageService_Read_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListVersions",
			Handler:       _StorageService_ListVersions_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ReadVersion",
			Handler:       _StorageService_ReadVersion_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListRecycle",
			Handler:       _StorageService_ListRecycle_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "cernbox/storage/v1/storage.proto",
}
