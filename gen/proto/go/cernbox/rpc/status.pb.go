// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cernbox/rpc/status.proto

package rpcpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Status struct {
	// The status code, which should be an enum value of [cernbox.rpc.code][cernbox.rpc.code].
	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=cernbox.rpc.Code" json:"code,omitempty"`
	// A developer-facing error message, which should be in English. Any
	// user-facing error message should be localized and sent in the
	// [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// A list of messages that carry the error details.  There is a common set of
	// message rpcs for APIs to use.
	Details              []*any.Any `protobuf:"bytes,3,rep,name=details,proto3" json:"details,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb22af38f99edacb, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetCode() Code {
	if m != nil {
		return m.Code
	}
	return Code_CODE_INVALID
}

func (m *Status) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Status) GetDetails() []*any.Any {
	if m != nil {
		return m.Details
	}
	return nil
}

func init() {
	proto.RegisterType((*Status)(nil), "cernbox.rpc.Status")
}

func init() { proto.RegisterFile("cernbox/rpc/status.proto", fileDescriptor_bb22af38f99edacb) }

var fileDescriptor_bb22af38f99edacb = []byte{
	// 227 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x48, 0x4e, 0x2d, 0xca,
	0x4b, 0xca, 0xaf, 0xd0, 0x2f, 0x2a, 0x48, 0xd6, 0x2f, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0xd6, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x86, 0xca, 0xe8, 0x15, 0x15, 0x24, 0x4b, 0x49, 0xa6, 0xe7,
	0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x83, 0xa5, 0x92, 0x4a, 0xd3, 0xf4, 0x13, 0xf3, 0x2a, 0x21, 0xea,
	0xa4, 0xc4, 0x90, 0x4d, 0x48, 0xce, 0x4f, 0x49, 0x85, 0x88, 0x2b, 0x55, 0x72, 0xb1, 0x05, 0x83,
	0xcd, 0x13, 0x52, 0xe5, 0x62, 0x01, 0x89, 0x4b, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x19, 0x09, 0xea,
	0x21, 0x19, 0xac, 0xe7, 0x9c, 0x9f, 0x92, 0x1a, 0x04, 0x96, 0x16, 0x92, 0xe0, 0x62, 0xcf, 0x4d,
	0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x95, 0x60, 0x52, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x71, 0x85, 0xf4,
	0xb8, 0xd8, 0x53, 0x52, 0x4b, 0x12, 0x33, 0x73, 0x8a, 0x25, 0x98, 0x15, 0x98, 0x35, 0xb8, 0x8d,
	0x44, 0xf4, 0x20, 0xee, 0xd1, 0x83, 0xb9, 0x47, 0xcf, 0x31, 0xaf, 0x32, 0x08, 0xa6, 0xc8, 0xc9,
	0x9e, 0x8b, 0x3f, 0x39, 0x3f, 0x17, 0xd9, 0x1e, 0x27, 0x6e, 0x88, 0x5b, 0x02, 0x40, 0xea, 0x03,
	0x18, 0xa3, 0x58, 0x8b, 0x0a, 0x92, 0x0b, 0x92, 0x16, 0x31, 0xb1, 0x3b, 0x3b, 0xf9, 0x47, 0x04,
	0x05, 0x38, 0x9f, 0x62, 0xe2, 0x76, 0x4e, 0x2d, 0xca, 0x73, 0xca, 0xaf, 0x88, 0x09, 0x0a, 0x70,
	0x4e, 0x62, 0x03, 0x9b, 0x6b, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x80, 0xd5, 0x11, 0xe5, 0x1e,
	0x01, 0x00, 0x00,
}
